on:
  repository_dispatch:
    types: [ copy-workflow ]

jobs:
  copy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cfg: ${{ github.event.client_payload.targets }}
    env:
      TARGET_DIR: "target-repo"
      TEMPLATE_DIR: "templates"
      NEEDS_UPDATE: 0
      PR_TITLE: "sync: ${{ github.event.client_payload.github_event.pull_request.title }}"
    name: Update ${{ matrix.file }} on ${{ matrix.cfg.target }}
    steps:
    - name: Event JSON
      run: cat "$GITHUB_EVENT_PATH" | jq -M .
    - name: Pull Reqeust Link
      run: echo ${{ github.event.client_payload.github_event.pull_request.html_url }}
    - name: Pull Request Title
      run: echo ${{ github.event.client_payload.github_event.pull_request.title }}
    - name: Checkout ${{ matrix.cfg.target }}
      uses: actions/checkout@v2
      with:
        repository: ${{ matrix.cfg.target }}
        token: ${{ secrets.IPLDBOT_GITHUB_TOKEN }}
        persist-credentials: true
    - name: Checkout template repository
      uses: actions/checkout@v2
      with:
        path: ${{ env.TARGET_DIR }}
    - name: Create commits
      run: |
        git config user.name ipldbot
        git config user.email "ipldbot@users.noreply.github.com"
        git checkout -b web3-bot-sync
        for f in $(jq ".[]" <<< '${{ toJson(github.event.client_payload.files) }}' | xargs -n1); do 
          echo -e "\nProcessing $f."
          needs_update=false
          # add DO NOT EDIT header
          tmp=$(mktemp)
          cat $TARGET_DIR/$TEMPLATE_DIR/header.yml $TARGET_DIR/$TEMPLATE_DIR/$f > $tmp
          mv $tmp $TARGET_DIR/$TEMPLATE_DIR/$f
          # create commit, if necessary
          commit_msg=""
          if [[ ! -f "$f" ]]; then
            echo "First deployment.\n"
            commit_msg="add $f"
            needs_update=true
          else
            status=$(cmp --silent $f $TARGET_DIR/$TEMPLATE_DIR/$f; echo $?)
            if [[ $status -ne 0 ]]; then
              echo "Update needed."
              commit_msg="update $f"
              needs_update=true
            else
              echo "File indentical. Skipping."
              continue
            fi
          fi
          if [ $needs_update = true ]; then
            dir=$(dirname $f)
            mkdir -p $dir
            cp $TARGET_DIR/$TEMPLATE_DIR/$f $dir
            git add $f
            git commit -m "$commit_msg"
            echo "NEEDS_UPDATE=1" >> $GITHUB_ENV
          fi
        done
        rm -rf $TARGET_DIR
    - name: Create Pull Request
      if: ${{ env.NEEDS_UPDATE == 1 }}
      uses: peter-evans/create-pull-request@052fc72b4198ba9fbc81b818c6e1859f747d49a8 #v3.8.2
      with:
        title: ${{ env.PR_TITLE }}
        body: |
          Change introduced by ${{ github.event.client_payload.github_event.pull_request.html_url }}.
          ---
          You can trigger a rebase by commenting `@ipldbot rebase`.
        token: ${{ secrets.IPLDBOT_GITHUB_TOKEN }}
        committer: ipldbot <ipldbot@users.noreply.github.com>
        author: ipldbot <ipldbot@users.noreply.github.com>
        delete-branch: true
